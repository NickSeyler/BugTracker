@model BugTracker.Models.Project

@using BugTracker.Models.Enums
@using BugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity


@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService HistoryService

@{
    ViewData["Title"] = "Details";
    BTUser btUser = await UserManager.GetUserAsync(User);
    BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
}

<header class="page-header">
	<h2>Details</h2>
</header>

<h1>@Model.Name</h1>

<div>
    <div class="container-fluid">
        <div class="row gy-2">

            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5">

                    <div class="card col m-1 p-2">
                        <div class="card-body">

                            <p>@Model.Description</p>

                            <div class="progress-container progress-info m-b-25">
                                <span class="progress-badge" style="font-size:small">Project Status</span>
                                <div class="progress">
                                    @{
                                        var start = Model.StartDate.DateTime;
                                        var end = Model.EndDate.DateTime;
                                        var today = DateTime.Now;
                                        var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                    }
                                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                        <span class="progress-value">@percent%</span>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <ul class=" list-unstyled basic-list">
                                <li>Start Date: <span class="">@Model.StartDate.DateTime.ToString("MMMM dd, yyyy")</span></li>
                                <li>Deadline: <span class="">@Model.EndDate.DateTime.ToString("MMMM dd, yyyy")</span></li>
                                <li>Priority: <span class="">@Model.ProjectPriorty!.Name</span></li>
                                @if(today < end && today >= start)
                                {
                                <li>Status: <span class="">Active</span></li>
                                }
                                else
                                {
                                <li>Status: <span class="">Inactive</span></li>
                                }
                            </ul>
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-md-4 col mt-5 ">
                <div class="card-header">
                    <h3>Project Manager</h3>
                </div>
                <div class="card-body">
                    <div class="card m-1 p-2">

                        <div style="overflow-y:auto;height:300px;">

                            @if(projectManager != null)
                            {
                            <div>
                                @if (projectManager.AvatarData != null)
                                {
                                    <img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarData))" alt="">
                                }
                                else
                                {
                                    <img class="rounded-circle" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="">
                                }
                                <div>
                                    <h5>@projectManager.FullName</h5>
                                    <span>@projectManager.Email</span>
                                    <p class="text-muted m-b-0">Project Manager</p>
                                    @if (User.IsInRole(nameof(BTRole.Admin)) || (btUser.Id == projectManager.Id))
                                    {
                                        <a class="btn btn-xs alert-primary" style="font:small" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
                                    }
                                </div>
                            </div>
                            }
                            else
                            {
                            <div>
                                <img class="rounded-circle" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="">
                                <div class="wid-u-info">
                                    <h5 class="text-muted m-b-0">Not Assigned</h5>
                                    @if (User.IsInRole(nameof(BTRole.Admin)))
                                    {
                                        <span><a asp-action="AssignPM" asp-controller="Projects" asp-route-id="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
                                    }
                                </div>
                            </div>
                            }

                        </div>

                    </div>
                </div>
            </div>

            <div class="col-md-4 col mt-5 ">
                <div class="card-header">
                    <h3>Project Team</h3>
                </div>
                <div class="card-body">
                    <div class="card m-1 p-2">

                        <div style="overflow-y:auto;height:300px;">
                            <ul class="right_chat list-unstyled mb-0">
                                @foreach (BTUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id))
                                {
                                <li class="">
                                    @if (member.AvatarData != null)
                                    {
                                        <img class="" style="width:30px;height:30px;" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarData))" alt="" />
                                    }
                                    else
                                    {
                                        <img class="" style="width:30px;height:30px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
                                    }
                                    <span class="">@member.FullName</span>
                                    <span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
                                </li>
                                }
                            </ul>
                        </div>

                    </div>
                </div>
            </div>

            <div class="card col-md-4 col mt-5 ">
                <div class="card-header">
                    <h3>Project Activity</h3>
                </div>
                <div class="card-body">
                    <div class="card m-1 p-2">
                        <div style="overflow-y:auto;height:300px;background-color:antiquewhite">
                            @* Project Activity loop *@
                            @if (!(await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId)).Any())
                            {
                                <span>No Ticket History</span>
                            }
                            @foreach (TicketHistory history in await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId))
                            {
                                <span class="date">@history.CreatedDate.ToString("dd MMM yyyy")</span>
                                <h6>@history.Description</h6>
                                <span>By: <a href="" title="@history.User!.FullName">@history.User.FullName</a></span>
                                @if(history.PropertyName == "")
                                {
                                <div class="">
                                    <p>The ticket <b>@history.PropertyName</b>  was edited</p>
                                    <p>@($"Previous {history.PropertyName}:  {history.OldValue}")</p>
                                    <p>@($"Current {history.PropertyName}:  {history.NewValue}")</p>
                                </div>
                                }
                            }
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-md-12 col">
                <div class="mt-5">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h3>Tickets</h3>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                <table class="table table-hover">
                                    <thead class="">
                                        <tr>
                                            <th>Title</th>
                                            <th>Developer</th>
                                            <th>Status</th>
                                            <th>Priority</th>
                                            <th>Date</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (Ticket ticket in Model.Tickets.OrderByDescending(d => d.CreatedDate))
                                        {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                            <td>
                                                @if (ticket.DeveloperUserId != null)
                                                {
                                                @ticket.DeveloperUser?.FullName
                                                }
                                                else
                                                {
                                                    if (User.IsInRole(nameof(BTRole.Admin)) || User.IsInRole(nameof(BTRole.ProjectManager)))
                                                    {
                                                    <a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-ticketId="@ticket.Id">Assign Dev</a>
                                                    }
                                                }
                                            </td>
                                            @if (ticket.TicketStatus?.Name == "New")
                                            {
                                            <td><span class="badge badge-success">@ticket.TicketStatus.Name </span></td>
                                            }
                                            else
                                            {
                                            <td><span class="badge badge-primary">@ticket.TicketStatus?.Name </span></td>
                                            }
                                            @if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.Low))
							                {
								                <td><span class="badge badge-success">@ticket.TicketPriority?.Name</span></td>
							                }
							                else if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.Medium))
							                {
								                <td><span class="badge badge-warning">@ticket.TicketPriority?.Name</span></td>
							                }
							                else if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.High))
							                {
								                <td><span class="badge badge-danger">@ticket.TicketPriority?.Name</span></td>
							                }
							                else if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.Urgent))
							                {
								                <td><span class="badge badge-dark">@ticket.TicketPriority?.Name</span></td>
							                }
                                            <td>@ticket.CreatedDate.ToString("MM-dd-yyyy")</td>
                                            <td>
                                                <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fas fa-align-justify"></i></a>
                                                @if (ticket.DeveloperUserId == btUser.Id || ticket.OwnerUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(BTRole.Admin)))
                                                {
                                                <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fas fa-clipboard-list"></i></a>
                                                }
                                                @if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
                                                {
                                                <a class="btn btn-sm btn-outline-danger" asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fas fa-trash"></i></a>
                                                }
                                            </td>
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
